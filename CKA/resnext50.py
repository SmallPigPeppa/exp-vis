import numpy as np
import matplotlib.pyplot as plt

# 假设这是你的五组原始数据
msc_1 = [
    [0.86686814, 0.9487662, 0.81457496, 0.80563414, 0.86924875, 0.8473335, 0.8151213, 0.835907, 0.87818646, 0.8641954,
     0.8398758, 0.83992195, 0.8288264, 0.8055008, 0.7626018, 0.69983006, 0.52943283],
    [0.8874411, 0.9507347, 0.82206875, 0.8128547, 0.86844635, 0.8452996, 0.8154884, 0.836358, 0.87654525, 0.86329126,
     0.83876085, 0.83877677, 0.8264583, 0.8037672, 0.75881064, 0.6944415, 0.52922434],
    [0.87236166, 0.94520104, 0.8211486, 0.8129025, 0.8737021, 0.85057515, 0.81975937, 0.83797485, 0.8782526, 0.8657687,
     0.84199274, 0.8398321, 0.82763416, 0.8043645, 0.76219016, 0.70725626, 0.54032105],
    [0.8775482, 0.94901174, 0.8174832, 0.8086771, 0.8693852, 0.8470535, 0.8169335, 0.83636904, 0.88010603, 0.8663417,
     0.84078306, 0.8396514, 0.8284891, 0.8046165, 0.7604045, 0.7008207, 0.53573227],
    [0.8778995, 0.9461994, 0.814011, 0.8058722, 0.8696504, 0.8483186, 0.81813824, 0.8383404, 0.8774992, 0.86494505,
     0.84183764, 0.84289145, 0.8328449, 0.8102764, 0.7651682, 0.71053517, 0.541383]]

msc_2 = [[0.8982086, 0.90669936, 0.9212415, 0.911043, 0.744466],
         [0.84631896, 0.87504643, 0.9063041, 0.901752, 0.7109492],
         [0.8918071, 0.8577352, 0.8978633, 0.9074099, 0.7302607],
         [0.88201475, 0.8729411, 0.90055805, 0.8990645, 0.7088191],
         [0.8101187, 0.8818498, 0.90852475, 0.910366, 0.72927576],
         [0.9079905, 0.9095315, 0.92006594, 0.90977603, 0.730175],
         [0.77072406, 0.88183975, 0.9171173, 0.9123913, 0.7187944],
         [0.8142737, 0.859263, 0.90541404, 0.9157367, 0.73554355],
         [0.86340374, 0.9041075, 0.92039716, 0.92705107, 0.73567814],
         [0.8965324, 0.90357083, 0.91788083, 0.9082807, 0.75444114]]
msc_3 = [[0.8982086, 0.90669936, 0.9212415, 0.911043, 0.744466],
         [0.84631896, 0.87504643, 0.9063041, 0.901752, 0.7109492],
         [0.8918071, 0.8577352, 0.8978633, 0.9074099, 0.7302607],
         [0.88201475, 0.8729411, 0.90055805, 0.8990645, 0.7088191],
         [0.8101187, 0.8818498, 0.90852475, 0.910366, 0.72927576],
         [0.9079905, 0.9095315, 0.92006594, 0.90977603, 0.730175],
         [0.77072406, 0.88183975, 0.9171173, 0.9123913, 0.7187944],
         [0.8142737, 0.859263, 0.90541404, 0.9157367, 0.73554355],
         [0.86340374, 0.9041075, 0.92039716, 0.92705107, 0.73567814],
         [0.8965324, 0.90357083, 0.91788083, 0.9082807, 0.75444114]]

# baseline = [[0.68121004, 0.77985275, 0.7705338, 0.6552043], [0.66172975, 0.8029349, 0.733692, 0.69003946],
#             [0.6899098, 0.8162974, 0.7829665, 0.6794236], [0.7013977, 0.82912505, 0.7781059, 0.70148516],
#             [0.4846793, 0.79858786, 0.7697838, 0.6684926], [0.7389146, 0.8220363, 0.7620348, 0.69198483],
#             [0.62759095, 0.78040653, 0.7426451, 0.66908795], [0.797705, 0.7487331, 0.739415, 0.6667532],
#             [0.60975116, 0.8286636, 0.8035112, 0.6843092], [0.56872886, 0.8434364, 0.7992798, 0.7113005]]
baseline = [[0.69426507, 0.82879037, 0.84728485, 0.8956484, 0.37134457],
            [0.7318271, 0.82034546, 0.847311, 0.8907841, 0.3745986],
            [0.6486183, 0.8035253, 0.8095117, 0.84355074, 0.39280716],
            [0.65475535, 0.825149, 0.8391764, 0.8911507, 0.4239638],
            [0.67755854, 0.8172854, 0.84184426, 0.9011511, 0.3961586],
            [0.66743606, 0.81054676, 0.81525856, 0.8524587, 0.38229328],
            [0.6162845, 0.8182557, 0.8119056, 0.8408636, 0.39599678],
            [0.7330103, 0.8491427, 0.84767365, 0.8783139, 0.3613436],
            [0.6642602, 0.80072993, 0.8270861, 0.8876339, 0.37972575],
            [0.7321905, 0.8324224, 0.8328075, 0.85263675, 0.41428053]]
# 将数据转换为NumPy数组
data_a1_np = np.array(msc_1)
data_a2_np = np.array(msc_2)
data_a3_np = np.array(msc_3)
data_b_np = np.array(baseline)

# 计算每个维度的均值和标准差
means_a1 = data_a1_np.mean(axis=0)
std_devs_a1 = data_a1_np.std(axis=0)

means_a2 = data_a2_np.mean(axis=0)
std_devs_a2 = data_a2_np.std(axis=0)

means_a3 = data_a3_np.mean(axis=0)
std_devs_a3 = data_a3_np.std(axis=0)

means_b = data_b_np.mean(axis=0)
std_devs_b = data_b_np.std(axis=0)

# 设置x轴数据
x = np.arange(1, len(means_b) + 1)
#

# 绘制方法A的平均值曲线和误差带
# plt.plot(x, means_a1, '-o', label='MSC-1', color='blue', linewidth=1)
# plt.fill_between(x, np.array(means_a1) - np.array(std_devs_a1), np.array(means_a1) + np.array(std_devs_a1),
#                  color='blue',
#                  alpha=0.2, edgecolor=None)

plt.plot(x, means_a2, '-o', label='Our', color='yellowgreen', linewidth=1)
plt.fill_between(x, np.array(means_a2) - np.array(std_devs_a2), np.array(means_a2) + np.array(std_devs_a2),
                 color='yellowgreen',
                 alpha=0.2, edgecolor=None)

# plt.plot(x, means_a3, '-o', label='MSC-3', color='pink', linewidth=1)
# plt.fill_between(x, np.array(means_a3) - np.array(std_devs_a3), np.array(means_a3) + np.array(std_devs_a3),
#                  color='pink',
#                  alpha=0.2, edgecolor=None)

# 绘制方法B的平均值曲线和误差带
# means_b[-1] = means_b[-1] - 0.01
plt.plot(x, means_b, '-o', label='Baseline', color='purple', linewidth=1)
plt.fill_between(x, np.array(means_b) - np.array(std_devs_b), np.array(means_b) + np.array(std_devs_b), color='purple',
                 alpha=0.2, edgecolor=None)

# 添加轴标签和标题
plt.xlabel('Block Index')
plt.ylabel('CKA')
plt.title('ResNext-50', loc='left')

# 显示图例
plt.legend()
plt.grid()

# 显示图形

plt.savefig('result/resnext50.pdf', format='pdf', bbox_inches='tight')
plt.show()

means_b_str = ", ".join(["{:.4f}".format(x) for x in means_b])
std_devs_b_str = ", ".join(["{:.4f}".format(x) for x in std_devs_b])
means_msun_str = ", ".join(["{:.4f}".format(x) for x in means_a2])
std_devs_msun_str = ", ".join(["{:.4f}".format(x) for x in std_devs_a2])


print(f"means_msun: [{means_msun_str}]")
print(f"std_devs_msun: [{std_devs_msun_str}]")
print(f"means_b: [{means_b_str}]")
print(f"std_devs_b: [{std_devs_b_str}]")